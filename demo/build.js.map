{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","demo/demo.js","overlay-es6.js"],"names":[],"mappings":"AAAA;;;;;uBCAoB,gBAAgB;;;;AAEpC,IAAI,OAAO,GAAG,0BAAa,CAAC;;AAE5B,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAM;AACjE,SAAO,CAAC,IAAI,EAAE,CAAC;CAChB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICNG,OAAO;AAEA,WAFP,OAAO,GAEG;0BAFV,OAAO;;AAGT,QAAI,CAAC,SAAS,GAAM,IAAI,CAAC;AACzB,QAAI,CAAC,QAAQ,GAAO,eAAe,EAAE,CAAC;AACtC,QAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;;AAE9B,QAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;GAC7B;;eARG,OAAO;;;;;;;;WAeL,kBAAG;AACP,UAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;;;AAGvD,UAAK,CAAC,SAAS,EAAG;AAChB,iBAAS,GAAa,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACpD,iBAAS,CAAC,SAAS,GAAG,aAAa,CAAC;AACpC,iBAAS,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;;AAEpC,gBAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,SAAS,CAAE,CAAC;OACxC;;AAED,UAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;AAE3B,aAAO,IAAI,CAAC;KACb;;;;;;;;;WAOG,gBAAG;;;AACL,cAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,CAAC,EAAK;AAAE,cAAK,YAAY,CAAC,CAAC,CAAC,CAAA;OAAE,CAAC,CAAC;;AAEzE,aAAO,IAAI,CAAC;KACb;;;;;;;WAKI,iBAAG;;;AACN,UAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;AAE3C,gBAAU,CAAE,YAAM;AAChB,eAAK,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;OAEvC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC7B;;;;;;;;;WAOG,gBAAG;AACL,aAAO,IAAI,CAAC;KACb;;;;;;;;;WAOW,sBAAC,CAAC,EAAE;AACd,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,UAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAG;AACjE,YAAI,CAAC,KAAK,EAAE,CAAC;OACd;KACF;;;;;;;WAKG,gBAAG;;;AACL,UAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAM,OAAO,CAAC;;AAE1C,gBAAU,CAAE,YAAM;AAChB,eAAK,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;OAEzC,EAAE,EAAE,CAAC,CAAC;KACR;;;SAtFG,OAAO;;;;;;;;AA+Fb,SAAS,eAAe,GAAG;AACzB,+WASgB;CACjB;;qBAEc,OAAO","file":"build.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Overlay from '../overlay-es6';\n\nlet overlay = new Overlay();\n\ndocument.querySelector('.trigger').addEventListener('click', () => {\n  overlay.open();\n});\n\n//$(function() {\n//  var sampleContent = $(\"script.sample-content\").html(),\n//      overlay = new Overlay();\n//\n//  // trigger\n//  $(\".trigger\").on(\"click\", function(e) {\n//    overlay.append_content(sample_content);\n//    overlay.show(\"example-content-key\");\n//  });\n//\n//  // events\n//  $(window).on(\"overlay.show.default\", function(e) {\n//    console.log(\"Overlay is shown\");\n//  });\n//\n//  $(window).on(\"overlay.hide.default\", function(e) {\n//    console.log(\"Overlay is hidden\");\n//  });\n//});\n","class Overlay {\n\n  constructor() {\n    this.overlayEl    = null;\n    this.template     = defaultTemplate();\n    this.transitionDuration = 750;\n\n    this.append().bind().init();\n  }\n\n  /**\n   * Append element if not already in DOM\n   *\n   * @return {Overlay}\n   */\n  append() {\n    let overlayEl = document.querySelector('.mod-overlay');\n\n    // Overlay\n    if ( !overlayEl ) {\n      overlayEl           = document.createElement('div');\n      overlayEl.className = 'mod-overlay';\n      overlayEl.innerHTML = this.template;\n\n      document.body.appendChild( overlayEl );\n    }\n\n    this.overlayEl = overlayEl;\n\n    return this;\n  }\n\n  /**\n   * Bind events\n   *\n   * @return {Overlay}\n   */\n  bind() {\n    document.body.addEventListener('click', (e) => { this.onClickClose(e) });\n\n    return this;\n  }\n\n  /**\n   * Close overlay by adding CSS classes\n   */\n  close() {\n    this.overlayEl.classList.remove('is-open');\n\n    setTimeout( () => {\n      this.overlayEl.style.display = 'none';\n\n    }, this.transitionDuration);\n  }\n\n  /**\n   * Initialize overlay instance\n   *\n   * @return {Overlay}\n   */\n  init() {\n    return this;\n  }\n\n  /**\n   * On click close handler\n   *\n   * @param  {Event} e\n   */\n  onClickClose(e) {\n    console.log(this);\n    if ( e.target && e.target.classList.contains('js-overlay-close') ) {\n      this.close();\n    }\n  }\n\n  /**\n   * Open overlay by adding CSS classes\n   */\n  open() {\n    this.overlayEl.style.display    = 'block';\n\n    setTimeout( () => {\n      this.overlayEl.classList.add('is-open');\n\n    }, 25);\n  }\n\n}\n\n/**\n * Default template HTML\n *\n * @return {String}\n */\nfunction defaultTemplate() {\n  return `<div class=\"overlay__outer-wrapper\">\n            <div class=\"overlay__inner-wrapper\">\n              <div class=\"overlay__background js-overlay-close\"></div>\n              <div class=\"overlay__content\">\n                <a href=\"#\" class=\"js-overlay-close\">x</a>\n\n                Hello world\n              </div>\n            </div>\n          </div>`;\n}\n\nexport default Overlay;\n"]}